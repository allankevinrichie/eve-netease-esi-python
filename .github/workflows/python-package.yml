# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    tags: 
      - '*'
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
    steps:
    - uses: actions/checkout@v4
    - name: online generate
      env:
        GITHUB_REF_NAME: ${{ vars.GITHUB_REF_NAME }}
      run: bash generate.sh $GITHUB_REF_NAME
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      working-directory: ./python-client
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        pip install build
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      working-directory: ./python-client
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      working-directory: ./python-client
      run: |
        pytest
    - name: Build package
      working-directory: ./python-client
      run: python -m build
    - name: Publish
      env:
        PYPI_API_KEY: ${{ secrets.PYPI_API_KEY }}
      run: |
        python3 -m pip install --upgrade twine
        echo $PYPI_API_KEY > $HOME/.pypirc
        python3 -m twine upload --repository eve-netease-api ./python-client/dist/*.whl
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.3.3
      with:
        path: ./python-client/dist/*.whl
